.rn '' }`
''' $RCSfile$$Revision$$Date$
'''
''' $Log$
'''
.de Sh
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp
.if t .sp .5v
.if n .sp
..
.de Ip
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb
.ft CW
.nf
.ne \\$1
..
.de Ve
.ft R

.fi
..
'''
'''
'''     Set up \*(-- to give an unbreakable dash;
'''     string Tr holds user defined translation string.
'''     Bell System Logo is used as a dummy character.
'''
.tr \(*W-|\(bv\*(Tr
.ie n \{\
.ds -- \(*W-
.ds PI pi
.if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\" diablo 12 pitch
.ds L" ""
.ds R" ""
'''   \*(M", \*(S", \*(N" and \*(T" are the equivalent of
'''   \*(L" and \*(R", except that they are used on ".xx" lines,
'''   such as .IP and .SH, which do another additional levels of
'''   double-quote interpretation
.ds M" """
.ds S" """
.ds N" """""
.ds T" """""
.ds L' '
.ds R' '
.ds M' '
.ds S' '
.ds N' '
.ds T' '
'br\}
.el\{\
.ds -- \(em\|
.tr \*(Tr
.ds L" ``
.ds R" ''
.ds M" ``
.ds S" ''
.ds N" ``
.ds T" ''
.ds L' `
.ds R' '
.ds M' `
.ds S' '
.ds N' `
.ds T' '
.ds PI \(*p
'br\}
.\"	If the F register is turned on, we'll generate
.\"	index entries out stderr for the following things:
.\"		TH	Title 
.\"		SH	Header
.\"		Sh	Subsection 
.\"		Ip	Item
.\"		X<>	Xref  (embedded
.\"	Of course, you have to process the output yourself
.\"	in some meaninful fashion.
.if \nF \{
.de IX
.tm Index:\\$1\t\\n%\t"\\$2"
..
.nr % 0
.rr F
.\}
.TH SSL_CTX_set_info_callback 3 "1.0.1e" "11/Feb/2013" "OpenSSL"
.UC
.if n .hy 0
.if n .na
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.de CQ          \" put $1 in typewriter font
.ft CW
'if n "\c
'if t \\&\\$1\c
'if n \\&\\$1\c
'if n \&"
\\&\\$2 \\$3 \\$4 \\$5 \\$6 \\$7
'.ft R
..
.\" @(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2
.	\" AM - accent mark definitions
.bd B 3
.	\" fudge factors for nroff and troff
.if n \{\
.	ds #H 0
.	ds #V .8m
.	ds #F .3m
.	ds #[ \f1
.	ds #] \fP
.\}
.if t \{\
.	ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.	ds #V .6m
.	ds #F 0
.	ds #[ \&
.	ds #] \&
.\}
.	\" simple accents for nroff and troff
.if n \{\
.	ds ' \&
.	ds ` \&
.	ds ^ \&
.	ds , \&
.	ds ~ ~
.	ds ? ?
.	ds ! !
.	ds /
.	ds q
.\}
.if t \{\
.	ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.	ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.	ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.	ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.	ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.	ds ? \s-2c\h'-\w'c'u*7/10'\u\h'\*(#H'\zi\d\s+2\h'\w'c'u*8/10'
.	ds ! \s-2\(or\s+2\h'-\w'\(or'u'\v'-.8m'.\v'.8m'
.	ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.	ds q o\h'-\w'o'u*8/10'\s-4\v'.4m'\z\(*i\v'-.4m'\s+4\h'\w'o'u*8/10'
.\}
.	\" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds v \\k:\h'-(\\n(.wu*9/10-\*(#H)'\v'-\*(#V'\*(#[\s-4v\s0\v'\*(#V'\h'|\\n:u'\*(#]
.ds _ \\k:\h'-(\\n(.wu*9/10-\*(#H+(\*(#F*2/3))'\v'-.4m'\z\(hy\v'.4m'\h'|\\n:u'
.ds . \\k:\h'-(\\n(.wu*8/10)'\v'\*(#V*4/10'\z.\v'-\*(#V*4/10'\h'|\\n:u'
.ds 3 \*(#[\v'.2m'\s-2\&3\s0\v'-.2m'\*(#]
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.ds oe o\h'-(\w'o'u*4/10)'e
.ds Oe O\h'-(\w'O'u*4/10)'E
.	\" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.	\" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.	ds : e
.	ds 8 ss
.	ds v \h'-1'\o'\(aa\(ga'
.	ds _ \h'-1'^
.	ds . \h'-1'.
.	ds 3 3
.	ds o a
.	ds d- d\h'-1'\(ga
.	ds D- D\h'-1'\(hy
.	ds th \o'bp'
.	ds Th \o'LP'
.	ds ae ae
.	ds Ae AE
.	ds oe oe
.	ds Oe OE
.\}
.rm #[ #] #H #V #F C
.SH "NAME"
SSL_CTX_set_info_callback, SSL_CTX_get_info_callback, SSL_set_info_callback, SSL_get_info_callback \- handle information callback for SSL connections
.SH "SYNOPSIS"
.PP
.Vb 1
\& #include <openssl/ssl.h>
.Ve
.Vb 2
\& void SSL_CTX_set_info_callback(SSL_CTX *ctx, void (*callback)());
\& void (*SSL_CTX_get_info_callback(const SSL_CTX *ctx))();
.Ve
.Vb 2
\& void SSL_set_info_callback(SSL *ssl, void (*callback)());
\& void (*SSL_get_info_callback(const SSL *ssl))();
.Ve
.SH "DESCRIPTION"
\fISSL_CTX_set_info_callback()\fR sets the \fBcallback\fR function, that can be used to
obtain state information for SSL objects created from \fBctx\fR during connection
setup and use. The setting for \fBctx\fR is overridden from the setting for
a specific SSL object, if specified.
When \fBcallback\fR is NULL, not callback function is used.
.PP
\fISSL_set_info_callback()\fR sets the \fBcallback\fR function, that can be used to
obtain state information for \fBssl\fR during connection setup and use.
When \fBcallback\fR is NULL, the callback setting currently valid for
\fBctx\fR is used.
.PP
\fISSL_CTX_get_info_callback()\fR returns a pointer to the currently set information
callback function for \fBctx\fR.
.PP
\fISSL_get_info_callback()\fR returns a pointer to the currently set information
callback function for \fBssl\fR.
.SH "NOTES"
When setting up a connection and during use, it is possible to obtain state
information from the SSL/TLS engine. When set, an information callback function
is called whenever the state changes, an alert appears, or an error occurs.
.PP
The callback function is called as \fBcallback(SSL *ssl, int where, int ret)\fR.
The \fBwhere\fR argument specifies information about where (in which context)
the callback function was called. If \fBret\fR is 0, an error condition occurred.
If an alert is handled, SSL_CB_ALERT is set and \fBret\fR specifies the alert
information.
.PP
\fBwhere\fR is a bitmask made up of the following bits:
.Ip "\s-1SSL_CB_LOOP\s0" 4
Callback has been called to indicate state change inside a loop.
.Ip "\s-1SSL_CB_EXIT\s0" 4
Callback has been called to indicate error exit of a handshake function.
(May be soft error with retry option for non-blocking setups.)
.Ip "\s-1SSL_CB_READ\s0" 4
Callback has been called during read operation.
.Ip "\s-1SSL_CB_WRITE\s0" 4
Callback has been called during write operation.
.Ip "\s-1SSL_CB_ALERT\s0" 4
Callback has been called due to an alert being sent or received.
.Ip "\s-1SSL_CB_READ_ALERT\s0               (\s-1SSL_CB_ALERT\s0|\s-1SSL_CB_READ\s0)" 4
.Ip "\s-1SSL_CB_WRITE_ALERT\s0              (\s-1SSL_CB_ALERT\s0|\s-1SSL_CB_WRITE\s0)" 4
.Ip "\s-1SSL_CB_ACCEPT_LOOP\s0              (\s-1SSL_ST_ACCEPT\s0|\s-1SSL_CB_LOOP\s0)" 4
.Ip "\s-1SSL_CB_ACCEPT_EXIT\s0              (\s-1SSL_ST_ACCEPT\s0|\s-1SSL_CB_EXIT\s0)" 4
.Ip "\s-1SSL_CB_CONNECT_LOOP\s0             (\s-1SSL_ST_CONNECT\s0|\s-1SSL_CB_LOOP\s0)" 4
.Ip "\s-1SSL_CB_CONNECT_EXIT\s0             (\s-1SSL_ST_CONNECT\s0|\s-1SSL_CB_EXIT\s0)" 4
.Ip "\s-1SSL_CB_HANDSHAKE_START\s0" 4
Callback has been called because a new handshake is started.
.Ip "\s-1SSL_CB_HANDSHAKE_DONE\s0           0x20" 4
Callback has been called because a handshake is finished.
.PP
The current state information can be obtained using the
SSL_state_string(3) family of functions.
.PP
The \fBret\fR information can be evaluated using the
SSL_alert_type_string(3) family of functions.
.SH "RETURN VALUES"
\fISSL_set_info_callback()\fR does not provide diagnostic information.
.PP
\fISSL_get_info_callback()\fR returns the current setting.
.SH "EXAMPLES"
The following example callback function prints state strings, information
about alerts being handled and error messages to the \fBbio_err\fR BIO.
.PP
.Vb 4
\& void apps_ssl_info_callback(SSL *s, int where, int ret)
\&        {
\&        const char *str;
\&        int w;
.Ve
.Vb 1
\&        w=where& ~SSL_ST_MASK;
.Ve
.Vb 3
\&        if (w & SSL_ST_CONNECT) str="SSL_connect";
\&        else if (w & SSL_ST_ACCEPT) str="SSL_accept";
\&        else str="undefined";
.Ve
.Vb 24
\&        if (where & SSL_CB_LOOP)
\&                {
\&                BIO_printf(bio_err,"%s:%s\en",str,SSL_state_string_long(s));
\&                }
\&        else if (where & SSL_CB_ALERT)
\&                {
\&                str=(where & SSL_CB_READ)?"read":"write";
\&                BIO_printf(bio_err,"SSL3 alert %s:%s:%s\en",
\&                        str,
\&                        SSL_alert_type_string_long(ret),
\&                        SSL_alert_desc_string_long(ret));
\&                }
\&        else if (where & SSL_CB_EXIT)
\&                {
\&                if (ret == 0)
\&                        BIO_printf(bio_err,"%s:failed in %s\en",
\&                                str,SSL_state_string_long(s));
\&                else if (ret < 0)
\&                        {
\&                        BIO_printf(bio_err,"%s:error in %s\en",
\&                                str,SSL_state_string_long(s));
\&                        }
\&                }
\&        }
.Ve
.SH "SEE ALSO"
ssl(3), SSL_state_string(3),
SSL_alert_type_string(3)

.rn }` ''
.IX Title "SSL_CTX_set_info_callback 3"
.IX Name "SSL_CTX_set_info_callback, SSL_CTX_get_info_callback, SSL_set_info_callback, SSL_get_info_callback - handle information callback for SSL connections"

.IX Header "NAME"

.IX Header "SYNOPSIS"

.IX Header "DESCRIPTION"

.IX Header "NOTES"

.IX Item "\s-1SSL_CB_LOOP\s0"

.IX Item "\s-1SSL_CB_EXIT\s0"

.IX Item "\s-1SSL_CB_READ\s0"

.IX Item "\s-1SSL_CB_WRITE\s0"

.IX Item "\s-1SSL_CB_ALERT\s0"

.IX Item "\s-1SSL_CB_READ_ALERT\s0               (\s-1SSL_CB_ALERT\s0|\s-1SSL_CB_READ\s0)"

.IX Item "\s-1SSL_CB_WRITE_ALERT\s0              (\s-1SSL_CB_ALERT\s0|\s-1SSL_CB_WRITE\s0)"

.IX Item "\s-1SSL_CB_ACCEPT_LOOP\s0              (\s-1SSL_ST_ACCEPT\s0|\s-1SSL_CB_LOOP\s0)"

.IX Item "\s-1SSL_CB_ACCEPT_EXIT\s0              (\s-1SSL_ST_ACCEPT\s0|\s-1SSL_CB_EXIT\s0)"

.IX Item "\s-1SSL_CB_CONNECT_LOOP\s0             (\s-1SSL_ST_CONNECT\s0|\s-1SSL_CB_LOOP\s0)"

.IX Item "\s-1SSL_CB_CONNECT_EXIT\s0             (\s-1SSL_ST_CONNECT\s0|\s-1SSL_CB_EXIT\s0)"

.IX Item "\s-1SSL_CB_HANDSHAKE_START\s0"

.IX Item "\s-1SSL_CB_HANDSHAKE_DONE\s0           0x20"

.IX Header "RETURN VALUES"

.IX Header "EXAMPLES"

.IX Header "SEE ALSO"

