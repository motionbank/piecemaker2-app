.rn '' }`
''' $RCSfile$$Revision$$Date$
'''
''' $Log$
'''
.de Sh
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp
.if t .sp .5v
.if n .sp
..
.de Ip
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb
.ft CW
.nf
.ne \\$1
..
.de Ve
.ft R

.fi
..
'''
'''
'''     Set up \*(-- to give an unbreakable dash;
'''     string Tr holds user defined translation string.
'''     Bell System Logo is used as a dummy character.
'''
.tr \(*W-|\(bv\*(Tr
.ie n \{\
.ds -- \(*W-
.ds PI pi
.if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\" diablo 12 pitch
.ds L" ""
.ds R" ""
'''   \*(M", \*(S", \*(N" and \*(T" are the equivalent of
'''   \*(L" and \*(R", except that they are used on ".xx" lines,
'''   such as .IP and .SH, which do another additional levels of
'''   double-quote interpretation
.ds M" """
.ds S" """
.ds N" """""
.ds T" """""
.ds L' '
.ds R' '
.ds M' '
.ds S' '
.ds N' '
.ds T' '
'br\}
.el\{\
.ds -- \(em\|
.tr \*(Tr
.ds L" ``
.ds R" ''
.ds M" ``
.ds S" ''
.ds N" ``
.ds T" ''
.ds L' `
.ds R' '
.ds M' `
.ds S' '
.ds N' `
.ds T' '
.ds PI \(*p
'br\}
.\"	If the F register is turned on, we'll generate
.\"	index entries out stderr for the following things:
.\"		TH	Title 
.\"		SH	Header
.\"		Sh	Subsection 
.\"		Ip	Item
.\"		X<>	Xref  (embedded
.\"	Of course, you have to process the output yourself
.\"	in some meaninful fashion.
.if \nF \{
.de IX
.tm Index:\\$1\t\\n%\t"\\$2"
..
.nr % 0
.rr F
.\}
.TH ECPARAM 1 "1.0.1e" "11/Feb/2013" "OpenSSL"
.UC
.if n .hy 0
.if n .na
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.de CQ          \" put $1 in typewriter font
.ft CW
'if n "\c
'if t \\&\\$1\c
'if n \\&\\$1\c
'if n \&"
\\&\\$2 \\$3 \\$4 \\$5 \\$6 \\$7
'.ft R
..
.\" @(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2
.	\" AM - accent mark definitions
.bd B 3
.	\" fudge factors for nroff and troff
.if n \{\
.	ds #H 0
.	ds #V .8m
.	ds #F .3m
.	ds #[ \f1
.	ds #] \fP
.\}
.if t \{\
.	ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.	ds #V .6m
.	ds #F 0
.	ds #[ \&
.	ds #] \&
.\}
.	\" simple accents for nroff and troff
.if n \{\
.	ds ' \&
.	ds ` \&
.	ds ^ \&
.	ds , \&
.	ds ~ ~
.	ds ? ?
.	ds ! !
.	ds /
.	ds q
.\}
.if t \{\
.	ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.	ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.	ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.	ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.	ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.	ds ? \s-2c\h'-\w'c'u*7/10'\u\h'\*(#H'\zi\d\s+2\h'\w'c'u*8/10'
.	ds ! \s-2\(or\s+2\h'-\w'\(or'u'\v'-.8m'.\v'.8m'
.	ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.	ds q o\h'-\w'o'u*8/10'\s-4\v'.4m'\z\(*i\v'-.4m'\s+4\h'\w'o'u*8/10'
.\}
.	\" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds v \\k:\h'-(\\n(.wu*9/10-\*(#H)'\v'-\*(#V'\*(#[\s-4v\s0\v'\*(#V'\h'|\\n:u'\*(#]
.ds _ \\k:\h'-(\\n(.wu*9/10-\*(#H+(\*(#F*2/3))'\v'-.4m'\z\(hy\v'.4m'\h'|\\n:u'
.ds . \\k:\h'-(\\n(.wu*8/10)'\v'\*(#V*4/10'\z.\v'-\*(#V*4/10'\h'|\\n:u'
.ds 3 \*(#[\v'.2m'\s-2\&3\s0\v'-.2m'\*(#]
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.ds oe o\h'-(\w'o'u*4/10)'e
.ds Oe O\h'-(\w'O'u*4/10)'E
.	\" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.	\" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.	ds : e
.	ds 8 ss
.	ds v \h'-1'\o'\(aa\(ga'
.	ds _ \h'-1'^
.	ds . \h'-1'.
.	ds 3 3
.	ds o a
.	ds d- d\h'-1'\(ga
.	ds D- D\h'-1'\(hy
.	ds th \o'bp'
.	ds Th \o'LP'
.	ds ae ae
.	ds Ae AE
.	ds oe oe
.	ds Oe OE
.\}
.rm #[ #] #H #V #F C
.SH "NAME"
ecparam \- EC parameter manipulation and generation
.SH "SYNOPSIS"
\fBopenssl ecparam\fR
[\fB\-inform DER|PEM\fR]
[\fB\-outform DER|PEM\fR]
[\fB\-in filename\fR]
[\fB\-out filename\fR]
[\fB\-noout\fR]
[\fB\-text\fR]
[\fB\-C\fR]
[\fB\-check\fR]
[\fB\-name arg\fR]
[\fB\-list_curve\fR]
[\fB\-conv_form arg\fR]
[\fB\-param_enc arg\fR]
[\fB\-no_seed\fR]
[\fB\-rand file(s)\fR]
[\fB\-genkey\fR]
[\fB\-engine id\fR]
.SH "DESCRIPTION"
This command is used to manipulate or generate EC parameter files.
.SH "OPTIONS"
.Ip "\fB\-inform \s-1DER\s0|\s-1PEM\s0\fR" 4
This specifies the input format. The \fB\s-1DER\s0\fR option uses an \s-1ASN\s0.1 \s-1DER\s0 encoded
form compatible with \s-1RFC\s0 3279 EcpkParameters. The \s-1PEM\s0 form is the default
format: it consists of the \fB\s-1DER\s0\fR format base64 encoded with additional 
header and footer lines.
.Ip "\fB\-outform \s-1DER\s0|\s-1PEM\s0\fR" 4
This specifies the output format, the options have the same meaning as the 
\fB\-inform\fR option.
.Ip "\fB\-in filename\fR" 4
This specifies the input filename to read parameters from or standard input if
this option is not specified.
.Ip "\fB\-out filename\fR" 4
This specifies the output filename parameters to. Standard output is used
if this option is not present. The output filename should \fBnot\fR be the same
as the input filename.
.Ip "\fB\-noout\fR" 4
This option inhibits the output of the encoded version of the parameters.
.Ip "\fB\-text\fR" 4
This option prints out the \s-1EC\s0 parameters in human readable form.
.Ip "\fB\-C\fR" 4
This option converts the \s-1EC\s0 parameters into C code. The parameters can then
be loaded by calling the \fBget_ec_group_XXX()\fR function.
.Ip "\fB\-check\fR" 4
Validate the elliptic curve parameters.
.Ip "\fB\-name arg\fR" 4
Use the \s-1EC\s0 parameters with the specified \*(L'short\*(R' name. Use \fB\-list_curves\fR
to get a list of all currently implemented \s-1EC\s0 parameters.
.Ip "\fB\-list_curves\fR" 4
If this options is specified \fBecparam\fR will print out a list of all
currently implemented \s-1EC\s0 parameters names and exit.
.Ip "\fB\-conv_form\fR" 4
This specifies how the points on the elliptic curve are converted
into octet strings. Possible values are: \fBcompressed\fR (the default
value), \fBuncompressed\fR and \fBhybrid\fR. For more information regarding
the point conversion forms please read the X9.62 standard.
\fBNote\fR Due to patent issues the \fBcompressed\fR option is disabled
by default for binary curves and can be enabled by defining
the preprocessor macro \fB\s-1OPENSSL_EC_BIN_PT_COMP\s0\fR at compile time.
.Ip "\fB\-param_enc arg\fR" 4
This specifies how the elliptic curve parameters are encoded.
Possible value are: \fBnamed_curve\fR, i.e. the ec parameters are
specified by a \s-1OID\s0, or \fBexplicit\fR where the ec parameters are
explicitly given (see \s-1RFC\s0 3279 for the definition of the 
\s-1EC\s0 parameters structures). The default value is \fBnamed_curve\fR.
\fBNote\fR the \fBimplicitlyCA\fR alternative ,as specified in \s-1RFC\s0 3279,
is currently not implemented in OpenSSL.
.Ip "\fB\-no_seed\fR" 4
This option inhibits that the \*(L'seed\*(R' for the parameter generation
is included in the ECParameters structure (see \s-1RFC\s0 3279).
.Ip "\fB\-genkey\fR" 4
This option will generate a \s-1EC\s0 private key using the specified parameters.
.Ip "\fB\-rand file(s)\fR" 4
a file or files containing random data used to seed the random number
generator, or an \s-1EGD\s0 socket (see RAND_egd(3)).
Multiple files can be specified separated by a \s-1OS\s0\-dependent character.
The separator is \fB;\fR for \s-1MS\s0\-Windows, \fB,\fR for OpenVMS, and \fB:\fR for
all others.
.Ip "\fB\-engine id\fR" 4
specifying an engine (by its unique \fBid\fR string) will cause \fBecparam\fR
to attempt to obtain a functional reference to the specified engine,
thus initialising it if needed. The engine will then be set as the default
for all available algorithms.
.SH "NOTES"
PEM format EC parameters use the header and footer lines:
.PP
.Vb 2
\& -----BEGIN EC PARAMETERS-----
\& -----END EC PARAMETERS-----
.Ve
OpenSSL is currently not able to generate new groups and therefore
\fBecparam\fR can only create EC parameters from known (named) curves. 
.SH "EXAMPLES"
To create EC parameters with the group \*(L'prime192v1':
.PP
.Vb 1
\&  openssl ecparam -out ec_param.pem -name prime192v1
.Ve
To create EC parameters with explicit parameters:
.PP
.Vb 1
\&  openssl ecparam -out ec_param.pem -name prime192v1 -param_enc explicit
.Ve
To validate given EC parameters:
.PP
.Vb 1
\&  openssl ecparam -in ec_param.pem -check
.Ve
To create EC parameters and a private key:
.PP
.Vb 1
\&  openssl ecparam -out ec_key.pem -name prime192v1 -genkey
.Ve
To change the point encoding to \*(L'compressed':
.PP
.Vb 1
\&  openssl ecparam -in ec_in.pem -out ec_out.pem -conv_form compressed
.Ve
To print out the EC parameters to standard output:
.PP
.Vb 1
\&  openssl ecparam -in ec_param.pem -noout -text
.Ve
.SH "SEE ALSO"
ec(1), dsaparam(1)
.SH "HISTORY"
The ecparam command was first introduced in OpenSSL 0.9.8.
.SH "AUTHOR"
Nils Larsch for the OpenSSL project (http://www.openssl.org)

.rn }` ''
.IX Title "ECPARAM 1"
.IX Name "ecparam - EC parameter manipulation and generation"

.IX Header "NAME"

.IX Header "SYNOPSIS"

.IX Header "DESCRIPTION"

.IX Header "OPTIONS"

.IX Item "\fB\-inform \s-1DER\s0|\s-1PEM\s0\fR"

.IX Item "\fB\-outform \s-1DER\s0|\s-1PEM\s0\fR"

.IX Item "\fB\-in filename\fR"

.IX Item "\fB\-out filename\fR"

.IX Item "\fB\-noout\fR"

.IX Item "\fB\-text\fR"

.IX Item "\fB\-C\fR"

.IX Item "\fB\-check\fR"

.IX Item "\fB\-name arg\fR"

.IX Item "\fB\-list_curves\fR"

.IX Item "\fB\-conv_form\fR"

.IX Item "\fB\-param_enc arg\fR"

.IX Item "\fB\-no_seed\fR"

.IX Item "\fB\-genkey\fR"

.IX Item "\fB\-rand file(s)\fR"

.IX Item "\fB\-engine id\fR"

.IX Header "NOTES"

.IX Header "EXAMPLES"

.IX Header "SEE ALSO"

.IX Header "HISTORY"

.IX Header "AUTHOR"

