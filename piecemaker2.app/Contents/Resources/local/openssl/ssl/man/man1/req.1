.rn '' }`
''' $RCSfile$$Revision$$Date$
'''
''' $Log$
'''
.de Sh
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp
.if t .sp .5v
.if n .sp
..
.de Ip
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb
.ft CW
.nf
.ne \\$1
..
.de Ve
.ft R

.fi
..
'''
'''
'''     Set up \*(-- to give an unbreakable dash;
'''     string Tr holds user defined translation string.
'''     Bell System Logo is used as a dummy character.
'''
.tr \(*W-|\(bv\*(Tr
.ie n \{\
.ds -- \(*W-
.ds PI pi
.if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\" diablo 12 pitch
.ds L" ""
.ds R" ""
'''   \*(M", \*(S", \*(N" and \*(T" are the equivalent of
'''   \*(L" and \*(R", except that they are used on ".xx" lines,
'''   such as .IP and .SH, which do another additional levels of
'''   double-quote interpretation
.ds M" """
.ds S" """
.ds N" """""
.ds T" """""
.ds L' '
.ds R' '
.ds M' '
.ds S' '
.ds N' '
.ds T' '
'br\}
.el\{\
.ds -- \(em\|
.tr \*(Tr
.ds L" ``
.ds R" ''
.ds M" ``
.ds S" ''
.ds N" ``
.ds T" ''
.ds L' `
.ds R' '
.ds M' `
.ds S' '
.ds N' `
.ds T' '
.ds PI \(*p
'br\}
.\"	If the F register is turned on, we'll generate
.\"	index entries out stderr for the following things:
.\"		TH	Title 
.\"		SH	Header
.\"		Sh	Subsection 
.\"		Ip	Item
.\"		X<>	Xref  (embedded
.\"	Of course, you have to process the output yourself
.\"	in some meaninful fashion.
.if \nF \{
.de IX
.tm Index:\\$1\t\\n%\t"\\$2"
..
.nr % 0
.rr F
.\}
.TH REQ 1 "1.0.1e" "11/Feb/2013" "OpenSSL"
.UC
.if n .hy 0
.if n .na
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.de CQ          \" put $1 in typewriter font
.ft CW
'if n "\c
'if t \\&\\$1\c
'if n \\&\\$1\c
'if n \&"
\\&\\$2 \\$3 \\$4 \\$5 \\$6 \\$7
'.ft R
..
.\" @(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2
.	\" AM - accent mark definitions
.bd B 3
.	\" fudge factors for nroff and troff
.if n \{\
.	ds #H 0
.	ds #V .8m
.	ds #F .3m
.	ds #[ \f1
.	ds #] \fP
.\}
.if t \{\
.	ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.	ds #V .6m
.	ds #F 0
.	ds #[ \&
.	ds #] \&
.\}
.	\" simple accents for nroff and troff
.if n \{\
.	ds ' \&
.	ds ` \&
.	ds ^ \&
.	ds , \&
.	ds ~ ~
.	ds ? ?
.	ds ! !
.	ds /
.	ds q
.\}
.if t \{\
.	ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.	ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.	ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.	ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.	ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.	ds ? \s-2c\h'-\w'c'u*7/10'\u\h'\*(#H'\zi\d\s+2\h'\w'c'u*8/10'
.	ds ! \s-2\(or\s+2\h'-\w'\(or'u'\v'-.8m'.\v'.8m'
.	ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.	ds q o\h'-\w'o'u*8/10'\s-4\v'.4m'\z\(*i\v'-.4m'\s+4\h'\w'o'u*8/10'
.\}
.	\" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds v \\k:\h'-(\\n(.wu*9/10-\*(#H)'\v'-\*(#V'\*(#[\s-4v\s0\v'\*(#V'\h'|\\n:u'\*(#]
.ds _ \\k:\h'-(\\n(.wu*9/10-\*(#H+(\*(#F*2/3))'\v'-.4m'\z\(hy\v'.4m'\h'|\\n:u'
.ds . \\k:\h'-(\\n(.wu*8/10)'\v'\*(#V*4/10'\z.\v'-\*(#V*4/10'\h'|\\n:u'
.ds 3 \*(#[\v'.2m'\s-2\&3\s0\v'-.2m'\*(#]
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.ds oe o\h'-(\w'o'u*4/10)'e
.ds Oe O\h'-(\w'O'u*4/10)'E
.	\" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.	\" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.	ds : e
.	ds 8 ss
.	ds v \h'-1'\o'\(aa\(ga'
.	ds _ \h'-1'^
.	ds . \h'-1'.
.	ds 3 3
.	ds o a
.	ds d- d\h'-1'\(ga
.	ds D- D\h'-1'\(hy
.	ds th \o'bp'
.	ds Th \o'LP'
.	ds ae ae
.	ds Ae AE
.	ds oe oe
.	ds Oe OE
.\}
.rm #[ #] #H #V #F C
.SH "NAME"
req \- PKCS#10 certificate request and certificate generating utility.
.SH "SYNOPSIS"
\fBopenssl\fR \fBreq\fR
[\fB\-inform PEM|DER\fR]
[\fB\-outform PEM|DER\fR]
[\fB\-in filename\fR]
[\fB\-passin arg\fR]
[\fB\-out filename\fR]
[\fB\-passout arg\fR]
[\fB\-text\fR]
[\fB\-pubkey\fR]
[\fB\-noout\fR]
[\fB\-verify\fR]
[\fB\-modulus\fR]
[\fB\-new\fR]
[\fB\-rand file(s)\fR]
[\fB\-newkey rsa:bits\fR]
[\fB\-newkey alg:file\fR]
[\fB\-nodes\fR]
[\fB\-key filename\fR]
[\fB\-keyform PEM|DER\fR]
[\fB\-keyout filename\fR]
[\fB\-keygen_engine id\fR]
[\fB\-[digest]\fR]
[\fB\-config filename\fR]
[\fB\-subj arg\fR]
[\fB\-multivalue-rdn\fR]
[\fB\-x509\fR]
[\fB\-days n\fR]
[\fB\-set_serial n\fR]
[\fB\-asn1-kludge\fR]
[\fB\-no-asn1-kludge\fR]
[\fB\-newhdr\fR]
[\fB\-extensions section\fR]
[\fB\-reqexts section\fR]
[\fB\-utf8\fR]
[\fB\-nameopt\fR]
[\fB\-reqopt\fR]
[\fB\-subject\fR]
[\fB\-subj arg\fR]
[\fB\-batch\fR]
[\fB\-verbose\fR]
[\fB\-engine id\fR]
.SH "DESCRIPTION"
The \fBreq\fR command primarily creates and processes certificate requests
in PKCS#10 format. It can additionally create self signed certificates
for use as root CAs for example.
.SH "COMMAND OPTIONS"
.Ip "\fB\-inform \s-1DER\s0|\s-1PEM\s0\fR" 4
This specifies the input format. The \fB\s-1DER\s0\fR option uses an \s-1ASN1\s0 \s-1DER\s0 encoded
form compatible with the \s-1PKCS\s0#10. The \fB\s-1PEM\s0\fR form is the default format: it
consists of the \fB\s-1DER\s0\fR format base64 encoded with additional header and
footer lines.
.Ip "\fB\-outform \s-1DER\s0|\s-1PEM\s0\fR" 4
This specifies the output format, the options have the same meaning as the 
\fB\-inform\fR option.
.Ip "\fB\-in filename\fR" 4
This specifies the input filename to read a request from or standard input
if this option is not specified. A request is only read if the creation
options (\fB\-new\fR and \fB\-newkey\fR) are not specified.
.Ip "\fB\-passin arg\fR" 4
the input file password source. For more information about the format of \fBarg\fR
see the \fB\s-1PASS\s0 \s-1PHRASE\s0 \s-1ARGUMENTS\s0\fR section in openssl(1).
.Ip "\fB\-out filename\fR" 4
This specifies the output filename to write to or standard output by
default.
.Ip "\fB\-passout arg\fR" 4
the output file password source. For more information about the format of \fBarg\fR
see the \fB\s-1PASS\s0 \s-1PHRASE\s0 \s-1ARGUMENTS\s0\fR section in openssl(1).
.Ip "\fB\-text\fR" 4
prints out the certificate request in text form.
.Ip "\fB\-subject\fR" 4
prints out the request subject (or certificate subject if \fB\-x509\fR is
specified)
.Ip "\fB\-pubkey\fR" 4
outputs the public key.
.Ip "\fB\-noout\fR" 4
this option prevents output of the encoded version of the request.
.Ip "\fB\-modulus\fR" 4
this option prints out the value of the modulus of the public key
contained in the request.
.Ip "\fB\-verify\fR" 4
verifies the signature on the request.
.Ip "\fB\-new\fR" 4
this option generates a new certificate request. It will prompt
the user for the relevant field values. The actual fields
prompted for and their maximum and minimum sizes are specified
in the configuration file and any requested extensions.
.Sp
If the \fB\-key\fR option is not used it will generate a new \s-1RSA\s0 private
key using information specified in the configuration file.
.Ip "\fB\-subj arg\fR" 4
Replaces subject field of input request with specified data and outputs
modified request. The arg must be formatted as
\fI/type0=value0/type1=value1/type2=...\fR,
characters may be escaped by \e (backslash), no spaces are skipped.
.Ip "\fB\-rand file(s)\fR" 4
a file or files containing random data used to seed the random number
generator, or an \s-1EGD\s0 socket (see RAND_egd(3)).
Multiple files can be specified separated by a \s-1OS\s0\-dependent character.
The separator is \fB;\fR for \s-1MS\s0\-Windows, \fB,\fR for OpenVMS, and \fB:\fR for
all others.
.Ip "\fB\-newkey arg\fR" 4
this option creates a new certificate request and a new private
key. The argument takes one of several forms. \fBrsa:nbits\fR, where
\fBnbits\fR is the number of bits, generates an \s-1RSA\s0 key \fBnbits\fR
in size. If \fBnbits\fR is omitted, i.e. \fB\-newkey rsa\fR specified,
the default key size, specified in the configuration file is used.
.Sp
All other algorithms support the \fB\-newkey alg:file\fR form, where file may be
an algorithm parameter file, created by the \fBgenpkey \-genparam\fR command
or and X.509 certificate for a key with approriate algorithm.
.Sp
\fBparam:file\fR generates a key using the parameter file or certificate \fBfile\fR,
the algorithm is determined by the parameters. \fBalgname:file\fR use algorithm
\fBalgname\fR and parameter file \fBfile\fR: the two algorithms must match or an
error occurs. \fBalgname\fR just uses algorithm \fBalgname\fR, and parameters,
if neccessary should be specified via \fB\-pkeyopt\fR parameter.
.Sp
\fBdsa:filename\fR generates a \s-1DSA\s0 key using the parameters
in the file \fBfilename\fR. \fBec:filename\fR generates \s-1EC\s0 key (usable both with
\s-1ECDSA\s0 or \s-1ECDH\s0 algorithms), \fBgost2001:filename\fR generates \s-1GOST\s0 R
34.10-2001 key (requires \fBccgost\fR engine configured in the configuration
file). If just \fBgost2001\fR is specified a parameter set should be
specified by \fB\-pkeyopt paramset:X\fR
.Ip "\fB\-pkeyopt opt:value\fR" 4
set the public key algorithm option \fBopt\fR to \fBvalue\fR. The precise set of
options supported depends on the public key algorithm used and its
implementation. See \fB\s-1KEY\s0 \s-1GENERATION\s0 \s-1OPTIONS\s0\fR in the \fBgenpkey\fR manual page
for more details.
.Ip "\fB\-key filename\fR" 4
This specifies the file to read the private key from. It also
accepts \s-1PKCS\s0#8 format private keys for \s-1PEM\s0 format files.
.Ip "\fB\-keyform \s-1PEM\s0|\s-1DER\s0\fR" 4
the format of the private key file specified in the \fB\-key\fR
argument. \s-1PEM\s0 is the default.
.Ip "\fB\-keyout filename\fR" 4
this gives the filename to write the newly created private key to.
If this option is not specified then the filename present in the
configuration file is used.
.Ip "\fB\-nodes\fR" 4
if this option is specified then if a private key is created it
will not be encrypted.
.Ip "\fB\-[digest]\fR" 4
this specifies the message digest to sign the request with (such as
\fB\-md5\fR, \fB\-sha1\fR). This overrides the digest algorithm specified in
the configuration file.
.Sp
Some public key algorithms may override this choice. For instance, \s-1DSA\s0
signatures always use \s-1SHA1\s0, \s-1GOST\s0 R 34.10 signatures always use
\s-1GOST\s0 R 34.11-94 (\fB\-md_gost94\fR).
.Ip "\fB\-config filename\fR" 4
this allows an alternative configuration file to be specified,
this overrides the compile time filename or any specified in
the \fB\s-1OPENSSL_CONF\s0\fR environment variable.
.Ip "\fB\-subj arg\fR" 4
sets subject name for new request or supersedes the subject name
when processing a request.
The arg must be formatted as \fI/type0=value0/type1=value1/type2=...\fR,
characters may be escaped by \e (backslash), no spaces are skipped.
.Ip "\fB\-multivalue-rdn\fR" 4
this option causes the \-subj argument to be interpreted with full
support for multivalued RDNs. Example:
.Sp
\fI/\s-1DC\s0=org/\s-1DC\s0=OpenSSL/\s-1DC\s0=users/\s-1UID\s0=123456+\s-1CN\s0=John Doe\fR
.Sp
If \-multi-rdn is not used then the \s-1UID\s0 value is \fI123456+\s-1CN\s0=John Doe\fR.
.Ip "\fB\-x509\fR" 4
this option outputs a self signed certificate instead of a certificate
request. This is typically used to generate a test certificate or
a self signed root \s-1CA\s0. The extensions added to the certificate
(if any) are specified in the configuration file. Unless specified
using the \fBset_serial\fR option \fB0\fR will be used for the serial
number.
.Ip "\fB\-days n\fR" 4
when the \fB\-x509\fR option is being used this specifies the number of
days to certify the certificate for. The default is 30 days.
.Ip "\fB\-set_serial n\fR" 4
serial number to use when outputting a self signed certificate. This
may be specified as a decimal value or a hex value if preceded by \fB0x\fR.
It is possible to use negative serial numbers but this is not recommended.
.Ip "\fB\-extensions section\fR" 4
.Ip "\fB\-reqexts section\fR" 4
these options specify alternative sections to include certificate
extensions (if the \fB\-x509\fR option is present) or certificate
request extensions. This allows several different sections to
be used in the same configuration file to specify requests for
a variety of purposes.
.Ip "\fB\-utf8\fR" 4
this option causes field values to be interpreted as \s-1UTF8\s0 strings, by 
default they are interpreted as \s-1ASCII\s0. This means that the field
values, whether prompted from a terminal or obtained from a
configuration file, must be valid \s-1UTF8\s0 strings.
.Ip "\fB\-nameopt option\fR" 4
option which determines how the subject or issuer names are displayed. The
\fBoption\fR argument can be a single option or multiple options separated by
commas.  Alternatively the \fB\-nameopt\fR switch may be used more than once to
set multiple options. See the x509(1) manual page for details.
.Ip "\fB\-reqopt\fR" 4
customise the output format used with \fB\-text\fR. The \fBoption\fR argument can be
a single option or multiple options separated by commas. 
.Sp
See discission of the  \fB\-certopt\fR parameter in the \fBx509\fR
command.
.Ip "\fB\-asn1-kludge\fR" 4
by default the \fBreq\fR command outputs certificate requests containing
no attributes in the correct \s-1PKCS\s0#10 format. However certain CAs will only
accept requests containing no attributes in an invalid form: this
option produces this invalid format.
.Sp
More precisely the \fBAttributes\fR in a \s-1PKCS\s0#10 certificate request
are defined as a \fB\s-1SET\s0 \s-1OF\s0 Attribute\fR. They are \fBnot \s-1OPTIONAL\s0\fR so
if no attributes are present then they should be encoded as an
empty \fB\s-1SET\s0 \s-1OF\s0\fR. The invalid form does not include the empty
\fB\s-1SET\s0 \s-1OF\s0\fR whereas the correct form does.
.Sp
It should be noted that very few CAs still require the use of this option.
.Ip "\fB\-no-asn1-kludge\fR" 4
Reverses effect of \fB\-asn1-kludge\fR
.Ip "\fB\-newhdr\fR" 4
Adds the word \fB\s-1NEW\s0\fR to the \s-1PEM\s0 file header and footer lines on the outputed
request. Some software (Netscape certificate server) and some CAs need this.
.Ip "\fB\-batch\fR" 4
non-interactive mode.
.Ip "\fB\-verbose\fR" 4
print extra details about the operations being performed.
.Ip "\fB\-engine id\fR" 4
specifying an engine (by its unique \fBid\fR string) will cause \fBreq\fR
to attempt to obtain a functional reference to the specified engine,
thus initialising it if needed. The engine will then be set as the default
for all available algorithms.
.Ip "\fB\-keygen_engine id\fR" 4
specifies an engine (by its unique \fBid\fR string) which would be used
for key generation operations.
.SH "CONFIGURATION FILE FORMAT"
The configuration options are specified in the \fBreq\fR section of
the configuration file. As with all configuration files if no
value is specified in the specific section (i.e. \fBreq\fR) then
the initial unnamed or \fBdefault\fR section is searched too.
.PP
The options available are described in detail below.
.Ip "\fBinput_password output_password\fR" 4
The passwords for the input private key file (if present) and
the output private key file (if one will be created). The
command line options \fBpassin\fR and \fBpassout\fR override the
configuration file values.
.Ip "\fBdefault_bits\fR" 4
This specifies the default key size in bits. If not specified then
512 is used. It is used if the \fB\-new\fR option is used. It can be
overridden by using the \fB\-newkey\fR option.
.Ip "\fBdefault_keyfile\fR" 4
This is the default filename to write a private key to. If not
specified the key is written to standard output. This can be
overridden by the \fB\-keyout\fR option.
.Ip "\fBoid_file\fR" 4
This specifies a file containing additional \fB\s-1OBJECT\s0 \s-1IDENTIFIERS\s0\fR.
Each line of the file should consist of the numerical form of the
object identifier followed by white space then the short name followed
by white space and finally the long name. 
.Ip "\fBoid_section\fR" 4
This specifies a section in the configuration file containing extra
object identifiers. Each line should consist of the short name of the
object identifier followed by \fB=\fR and the numerical form. The short
and long names are the same when this option is used.
.Ip "\fB\s-1RANDFILE\s0\fR" 4
This specifies a filename in which random number seed information is
placed and read from, or an \s-1EGD\s0 socket (see RAND_egd(3)).
It is used for private key generation.
.Ip "\fBencrypt_key\fR" 4
If this is set to \fBno\fR then if a private key is generated it is
\fBnot\fR encrypted. This is equivalent to the \fB\-nodes\fR command line
option. For compatibility \fBencrypt_rsa_key\fR is an equivalent option.
.Ip "\fBdefault_md\fR" 4
This option specifies the digest algorithm to use. Possible values
include \fBmd5 sha1 mdc2\fR. If not present then \s-1MD5\s0 is used. This
option can be overridden on the command line.
.Ip "\fBstring_mask\fR" 4
This option masks out the use of certain string types in certain
fields. Most users will not need to change this option.
.Sp
It can be set to several values \fBdefault\fR which is also the default
option uses PrintableStrings, T61Strings and BMPStrings if the 
\fBpkix\fR value is used then only PrintableStrings and BMPStrings will
be used. This follows the \s-1PKIX\s0 recommendation in \s-1RFC2459\s0. If the
\fButf8only\fR option is used then only UTF8Strings will be used: this
is the \s-1PKIX\s0 recommendation in \s-1RFC2459\s0 after 2003. Finally the \fBnombstr\fR
option just uses PrintableStrings and T61Strings: certain software has
problems with BMPStrings and UTF8Strings: in particular Netscape.
.Ip "\fBreq_extensions\fR" 4
this specifies the configuration file section containing a list of
extensions to add to the certificate request. It can be overridden
by the \fB\-reqexts\fR command line switch. See the 
x509v3_config(5) manual page for details of the
extension section format.
.Ip "\fBx509_extensions\fR" 4
this specifies the configuration file section containing a list of
extensions to add to certificate generated when the \fB\-x509\fR switch
is used. It can be overridden by the \fB\-extensions\fR command line switch.
.Ip "\fBprompt\fR" 4
if set to the value \fBno\fR this disables prompting of certificate fields
and just takes values from the config file directly. It also changes the
expected format of the \fBdistinguished_name\fR and \fBattributes\fR sections.
.Ip "\fButf8\fR" 4
if set to the value \fByes\fR then field values to be interpreted as \s-1UTF8\s0
strings, by default they are interpreted as \s-1ASCII\s0. This means that
the field values, whether prompted from a terminal or obtained from a
configuration file, must be valid \s-1UTF8\s0 strings.
.Ip "\fBattributes\fR" 4
this specifies the section containing any request attributes: its format
is the same as \fBdistinguished_name\fR. Typically these may contain the
challengePassword or unstructuredName types. They are currently ignored
by OpenSSL's request signing utilities but some CAs might want them.
.Ip "\fBdistinguished_name\fR" 4
This specifies the section containing the distinguished name fields to
prompt for when generating a certificate or certificate request. The format
is described in the next section.
.SH "DISTINGUISHED NAME AND ATTRIBUTE SECTION FORMAT"
There are two separate formats for the distinguished name and attribute
sections. If the \fBprompt\fR option is set to \fBno\fR then these sections
just consist of field names and values: for example,
.PP
.Vb 3
\& CN=My Name
\& OU=My Organization
\& emailAddress=someone@somewhere.org
.Ve
This allows external programs (e.g. GUI based) to generate a template file
with all the field names and values and just pass it to \fBreq\fR. An example
of this kind of configuration file is contained in the \fBEXAMPLES\fR section.
.PP
Alternatively if the \fBprompt\fR option is absent or not set to \fBno\fR then the
file contains field prompting information. It consists of lines of the form:
.PP
.Vb 4
\& fieldName="prompt"
\& fieldName_default="default field value"
\& fieldName_min= 2
\& fieldName_max= 4
.Ve
\*(L"fieldName\*(R" is the field name being used, for example commonName (or CN).
The \*(L"prompt\*(R" string is used to ask the user to enter the relevant
details. If the user enters nothing then the default value is used if no
default value is present then the field is omitted. A field can
still be omitted if a default value is present if the user just
enters the \*(L'.\*(R' character.
.PP
The number of characters entered must be between the fieldName_min and
fieldName_max limits: there may be additional restrictions based
on the field being used (for example countryName can only ever be
two characters long and must fit in a PrintableString).
.PP
Some fields (such as organizationName) can be used more than once
in a DN. This presents a problem because configuration files will
not recognize the same name occurring twice. To avoid this problem
if the fieldName contains some characters followed by a full stop
they will be ignored. So for example a second organizationName can
be input by calling it \*(L"1.organizationName\*(R".
.PP
The actual permitted field names are any object identifier short or
long names. These are compiled into OpenSSL and include the usual
values such as commonName, countryName, localityName, organizationName,
organizationUnitName, stateOrProvinceName. Additionally emailAddress
is include as well as name, surname, givenName initials and dnQualifier.
.PP
Additional object identifiers can be defined with the \fBoid_file\fR or
\fBoid_section\fR options in the configuration file. Any additional fields
will be treated as though they were a DirectoryString.
.SH "EXAMPLES"
Examine and verify certificate request:
.PP
.Vb 1
\& openssl req -in req.pem -text -verify -noout
.Ve
Create a private key and then generate a certificate request from it:
.PP
.Vb 2
\& openssl genrsa -out key.pem 1024
\& openssl req -new -key key.pem -out req.pem
.Ve
The same but just using req:
.PP
.Vb 1
\& openssl req -newkey rsa:1024 -keyout key.pem -out req.pem
.Ve
Generate a self signed root certificate:
.PP
.Vb 1
\& openssl req -x509 -newkey rsa:1024 -keyout key.pem -out req.pem
.Ve
Example of a file pointed to by the \fBoid_file\fR option:
.PP
.Vb 2
\& 1.2.3.4        shortName       A longer Name
\& 1.2.3.6        otherName       Other longer Name
.Ve
Example of a section pointed to by \fBoid_section\fR making use of variable
expansion:
.PP
.Vb 2
\& testoid1=1.2.3.5
\& testoid2=${testoid1}.6
.Ve
Sample configuration file prompting for field values:
.PP
.Vb 6
\& [ req ]
\& default_bits           = 1024
\& default_keyfile        = privkey.pem
\& distinguished_name     = req_distinguished_name
\& attributes             = req_attributes
\& x509_extensions        = v3_ca
.Ve
.Vb 1
\& dirstring_type = nobmp
.Ve
.Vb 5
\& [ req_distinguished_name ]
\& countryName                    = Country Name (2 letter code)
\& countryName_default            = AU
\& countryName_min                = 2
\& countryName_max                = 2
.Ve
.Vb 1
\& localityName                   = Locality Name (eg, city)
.Ve
.Vb 1
\& organizationalUnitName         = Organizational Unit Name (eg, section)
.Ve
.Vb 2
\& commonName                     = Common Name (eg, YOUR name)
\& commonName_max                 = 64
.Ve
.Vb 2
\& emailAddress                   = Email Address
\& emailAddress_max               = 40
.Ve
.Vb 4
\& [ req_attributes ]
\& challengePassword              = A challenge password
\& challengePassword_min          = 4
\& challengePassword_max          = 20
.Ve
.Vb 1
\& [ v3_ca ]
.Ve
.Vb 3
\& subjectKeyIdentifier=hash
\& authorityKeyIdentifier=keyid:always,issuer:always
\& basicConstraints = CA:true
.Ve
Sample configuration containing all field values:
.PP
.Vb 1
\& RANDFILE               = $ENV::HOME/.rnd
.Ve
.Vb 7
\& [ req ]
\& default_bits           = 1024
\& default_keyfile        = keyfile.pem
\& distinguished_name     = req_distinguished_name
\& attributes             = req_attributes
\& prompt                 = no
\& output_password        = mypass
.Ve
.Vb 8
\& [ req_distinguished_name ]
\& C                      = GB
\& ST                     = Test State or Province
\& L                      = Test Locality
\& O                      = Organization Name
\& OU                     = Organizational Unit Name
\& CN                     = Common Name
\& emailAddress           = test@email.address
.Ve
.Vb 2
\& [ req_attributes ]
\& challengePassword              = A challenge password
.Ve
.SH "NOTES"
The header and footer lines in the \fBPEM\fR format are normally:
.PP
.Vb 2
\& -----BEGIN CERTIFICATE REQUEST-----
\& -----END CERTIFICATE REQUEST-----
.Ve
some software (some versions of Netscape certificate server) instead needs:
.PP
.Vb 2
\& -----BEGIN NEW CERTIFICATE REQUEST-----
\& -----END NEW CERTIFICATE REQUEST-----
.Ve
which is produced with the \fB\-newhdr\fR option but is otherwise compatible.
Either form is accepted transparently on input.
.PP
The certificate requests generated by \fBXenroll\fR with MSIE have extensions
added. It includes the \fBkeyUsage\fR extension which determines the type of
key (signature only or general purpose) and any additional OIDs entered
by the script in an extendedKeyUsage extension.
.SH "DIAGNOSTICS"
The following messages are frequently asked about:
.PP
.Vb 2
\&        Using configuration from /some/path/openssl.cnf
\&        Unable to load config info
.Ve
This is followed some time later by...
.PP
.Vb 2
\&        unable to find 'distinguished_name' in config
\&        problems making Certificate Request
.Ve
The first error message is the clue: it can't find the configuration
file! Certain operations (like examining a certificate request) don't
need a configuration file so its use isn't enforced. Generation of
certificates or requests however does need a configuration file. This
could be regarded as a bug.
.PP
Another puzzling message is this:
.PP
.Vb 2
\&        Attributes:
\&            a0:00
.Ve
this is displayed when no attributes are present and the request includes
the correct empty \fBSET OF\fR structure (the DER encoding of which is 0xa0
0x00). If you just see:
.PP
.Vb 1
\&        Attributes:
.Ve
then the \fBSET OF\fR is missing and the encoding is technically invalid (but
it is tolerated). See the description of the command line option \fB\-asn1-kludge\fR
for more information.
.SH "ENVIRONMENT VARIABLES"
The variable \fBOPENSSL_CONF\fR if defined allows an alternative configuration
file location to be specified, it will be overridden by the \fB\-config\fR command
line switch if it is present. For compatibility reasons the \fBSSLEAY_CONF\fR
environment variable serves the same purpose but its use is discouraged.
.SH "BUGS"
OpenSSL's handling of T61Strings (aka TeletexStrings) is broken: it effectively
treats them as ISO\-8859-1 (Latin 1), Netscape and MSIE have similar behaviour.
This can cause problems if you need characters that aren't available in
PrintableStrings and you don't want to or can't use BMPStrings.
.PP
As a consequence of the T61String handling the only correct way to represent
accented characters in OpenSSL is to use a BMPString: unfortunately Netscape
currently chokes on these. If you have to use accented characters with Netscape
and MSIE then you currently need to use the invalid T61String form.
.PP
The current prompting is not very friendly. It doesn't allow you to confirm what
you've just entered. Other things like extensions in certificate requests are
statically defined in the configuration file. Some of these: like an email
address in subjectAltName should be input by the user.
.SH "SEE ALSO"
x509(1), ca(1), genrsa(1),
gendsa(1), config(5),
x509v3_config(5) 

.rn }` ''
.IX Title "REQ 1"
.IX Name "req - PKCS#10 certificate request and certificate generating utility."

.IX Header "NAME"

.IX Header "SYNOPSIS"

.IX Header "DESCRIPTION"

.IX Header "COMMAND OPTIONS"

.IX Item "\fB\-inform \s-1DER\s0|\s-1PEM\s0\fR"

.IX Item "\fB\-outform \s-1DER\s0|\s-1PEM\s0\fR"

.IX Item "\fB\-in filename\fR"

.IX Item "\fB\-passin arg\fR"

.IX Item "\fB\-out filename\fR"

.IX Item "\fB\-passout arg\fR"

.IX Item "\fB\-text\fR"

.IX Item "\fB\-subject\fR"

.IX Item "\fB\-pubkey\fR"

.IX Item "\fB\-noout\fR"

.IX Item "\fB\-modulus\fR"

.IX Item "\fB\-verify\fR"

.IX Item "\fB\-new\fR"

.IX Item "\fB\-subj arg\fR"

.IX Item "\fB\-rand file(s)\fR"

.IX Item "\fB\-newkey arg\fR"

.IX Item "\fB\-pkeyopt opt:value\fR"

.IX Item "\fB\-key filename\fR"

.IX Item "\fB\-keyform \s-1PEM\s0|\s-1DER\s0\fR"

.IX Item "\fB\-keyout filename\fR"

.IX Item "\fB\-nodes\fR"

.IX Item "\fB\-[digest]\fR"

.IX Item "\fB\-config filename\fR"

.IX Item "\fB\-subj arg\fR"

.IX Item "\fB\-multivalue-rdn\fR"

.IX Item "\fB\-x509\fR"

.IX Item "\fB\-days n\fR"

.IX Item "\fB\-set_serial n\fR"

.IX Item "\fB\-extensions section\fR"

.IX Item "\fB\-reqexts section\fR"

.IX Item "\fB\-utf8\fR"

.IX Item "\fB\-nameopt option\fR"

.IX Item "\fB\-reqopt\fR"

.IX Item "\fB\-asn1-kludge\fR"

.IX Item "\fB\-no-asn1-kludge\fR"

.IX Item "\fB\-newhdr\fR"

.IX Item "\fB\-batch\fR"

.IX Item "\fB\-verbose\fR"

.IX Item "\fB\-engine id\fR"

.IX Item "\fB\-keygen_engine id\fR"

.IX Header "CONFIGURATION FILE FORMAT"

.IX Item "\fBinput_password output_password\fR"

.IX Item "\fBdefault_bits\fR"

.IX Item "\fBdefault_keyfile\fR"

.IX Item "\fBoid_file\fR"

.IX Item "\fBoid_section\fR"

.IX Item "\fB\s-1RANDFILE\s0\fR"

.IX Item "\fBencrypt_key\fR"

.IX Item "\fBdefault_md\fR"

.IX Item "\fBstring_mask\fR"

.IX Item "\fBreq_extensions\fR"

.IX Item "\fBx509_extensions\fR"

.IX Item "\fBprompt\fR"

.IX Item "\fButf8\fR"

.IX Item "\fBattributes\fR"

.IX Item "\fBdistinguished_name\fR"

.IX Header "DISTINGUISHED NAME AND ATTRIBUTE SECTION FORMAT"

.IX Header "EXAMPLES"

.IX Header "NOTES"

.IX Header "DIAGNOSTICS"

.IX Header "ENVIRONMENT VARIABLES"

.IX Header "BUGS"

.IX Header "SEE ALSO"

