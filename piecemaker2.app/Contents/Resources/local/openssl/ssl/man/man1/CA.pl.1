.rn '' }`
''' $RCSfile$$Revision$$Date$
'''
''' $Log$
'''
.de Sh
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp
.if t .sp .5v
.if n .sp
..
.de Ip
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb
.ft CW
.nf
.ne \\$1
..
.de Ve
.ft R

.fi
..
'''
'''
'''     Set up \*(-- to give an unbreakable dash;
'''     string Tr holds user defined translation string.
'''     Bell System Logo is used as a dummy character.
'''
.tr \(*W-|\(bv\*(Tr
.ie n \{\
.ds -- \(*W-
.ds PI pi
.if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\" diablo 12 pitch
.ds L" ""
.ds R" ""
'''   \*(M", \*(S", \*(N" and \*(T" are the equivalent of
'''   \*(L" and \*(R", except that they are used on ".xx" lines,
'''   such as .IP and .SH, which do another additional levels of
'''   double-quote interpretation
.ds M" """
.ds S" """
.ds N" """""
.ds T" """""
.ds L' '
.ds R' '
.ds M' '
.ds S' '
.ds N' '
.ds T' '
'br\}
.el\{\
.ds -- \(em\|
.tr \*(Tr
.ds L" ``
.ds R" ''
.ds M" ``
.ds S" ''
.ds N" ``
.ds T" ''
.ds L' `
.ds R' '
.ds M' `
.ds S' '
.ds N' `
.ds T' '
.ds PI \(*p
'br\}
.\"	If the F register is turned on, we'll generate
.\"	index entries out stderr for the following things:
.\"		TH	Title 
.\"		SH	Header
.\"		Sh	Subsection 
.\"		Ip	Item
.\"		X<>	Xref  (embedded
.\"	Of course, you have to process the output yourself
.\"	in some meaninful fashion.
.if \nF \{
.de IX
.tm Index:\\$1\t\\n%\t"\\$2"
..
.nr % 0
.rr F
.\}
.TH CA.PL 1 "1.0.1e" "11/Feb/2013" "OpenSSL"
.UC
.if n .hy 0
.if n .na
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.de CQ          \" put $1 in typewriter font
.ft CW
'if n "\c
'if t \\&\\$1\c
'if n \\&\\$1\c
'if n \&"
\\&\\$2 \\$3 \\$4 \\$5 \\$6 \\$7
'.ft R
..
.\" @(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2
.	\" AM - accent mark definitions
.bd B 3
.	\" fudge factors for nroff and troff
.if n \{\
.	ds #H 0
.	ds #V .8m
.	ds #F .3m
.	ds #[ \f1
.	ds #] \fP
.\}
.if t \{\
.	ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.	ds #V .6m
.	ds #F 0
.	ds #[ \&
.	ds #] \&
.\}
.	\" simple accents for nroff and troff
.if n \{\
.	ds ' \&
.	ds ` \&
.	ds ^ \&
.	ds , \&
.	ds ~ ~
.	ds ? ?
.	ds ! !
.	ds /
.	ds q
.\}
.if t \{\
.	ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.	ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.	ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.	ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.	ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.	ds ? \s-2c\h'-\w'c'u*7/10'\u\h'\*(#H'\zi\d\s+2\h'\w'c'u*8/10'
.	ds ! \s-2\(or\s+2\h'-\w'\(or'u'\v'-.8m'.\v'.8m'
.	ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.	ds q o\h'-\w'o'u*8/10'\s-4\v'.4m'\z\(*i\v'-.4m'\s+4\h'\w'o'u*8/10'
.\}
.	\" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds v \\k:\h'-(\\n(.wu*9/10-\*(#H)'\v'-\*(#V'\*(#[\s-4v\s0\v'\*(#V'\h'|\\n:u'\*(#]
.ds _ \\k:\h'-(\\n(.wu*9/10-\*(#H+(\*(#F*2/3))'\v'-.4m'\z\(hy\v'.4m'\h'|\\n:u'
.ds . \\k:\h'-(\\n(.wu*8/10)'\v'\*(#V*4/10'\z.\v'-\*(#V*4/10'\h'|\\n:u'
.ds 3 \*(#[\v'.2m'\s-2\&3\s0\v'-.2m'\*(#]
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.ds oe o\h'-(\w'o'u*4/10)'e
.ds Oe O\h'-(\w'O'u*4/10)'E
.	\" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.	\" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.	ds : e
.	ds 8 ss
.	ds v \h'-1'\o'\(aa\(ga'
.	ds _ \h'-1'^
.	ds . \h'-1'.
.	ds 3 3
.	ds o a
.	ds d- d\h'-1'\(ga
.	ds D- D\h'-1'\(hy
.	ds th \o'bp'
.	ds Th \o'LP'
.	ds ae ae
.	ds Ae AE
.	ds oe oe
.	ds Oe OE
.\}
.rm #[ #] #H #V #F C
.SH "NAME"
CA.pl \- friendlier interface for OpenSSL certificate programs
.SH "SYNOPSIS"
\fBCA.pl\fR
[\fB\-?\fR]
[\fB\-h\fR]
[\fB\-help\fR]
[\fB\-newcert\fR]
[\fB\-newreq\fR]
[\fB\-newreq-nodes\fR]
[\fB\-newca\fR]
[\fB\-xsign\fR]
[\fB\-sign\fR]
[\fB\-signreq\fR]
[\fB\-signcert\fR]
[\fB\-verify\fR]
[\fBfiles\fR]
.SH "DESCRIPTION"
The \fBCA.pl\fR script is a perl script that supplies the relevant command line
arguments to the \fBopenssl\fR command for some common certificate operations.
It is intended to simplify the process of certificate creation and management
by the use of some simple options.
.SH "COMMAND OPTIONS"
.Ip "\fB?\fR, \fB\-h\fR, \fB\-help\fR" 4
prints a usage message.
.Ip "\fB\-newcert\fR" 4
creates a new self signed certificate. The private key is written to the file
\*(L"newkey.pem\*(R" and the request written to the file \*(L"newreq.pem\*(R".
.Ip "\fB\-newreq\fR" 4
creates a new certificate request. The private key is written to the file
\*(L"newkey.pem\*(R" and the request written to the file \*(L"newreq.pem\*(R".
.Ip "\fB\-newreq-nodes\fR" 4
is like \fB\-newreq\fR except that the private key will not be encrypted.
.Ip "\fB\-newca\fR" 4
creates a new \s-1CA\s0 hierarchy for use with the \fBca\fR program (or the \fB\-signcert\fR
and \fB\-xsign\fR options). The user is prompted to enter the filename of the \s-1CA\s0
certificates (which should also contain the private key) or by hitting \s-1ENTER\s0
details of the \s-1CA\s0 will be prompted for. The relevant files and directories
are created in a directory called \*(L"demoCA\*(R" in the current directory.
.Ip "\fB\-pkcs12\fR" 4
create a \s-1PKCS\s0#12 file containing the user certificate, private key and \s-1CA\s0
certificate. It expects the user certificate and private key to be in the
file \*(L"newcert.pem\*(R" and the \s-1CA\s0 certificate to be in the file demoCA/cacert.pem,
it creates a file \*(L"newcert.p12\*(R". This command can thus be called after the
\fB\-sign\fR option. The \s-1PKCS\s0#12 file can be imported directly into a browser.
If there is an additional argument on the command line it will be used as the
\*(L"friendly name\*(R" for the certificate (which is typically displayed in the browser
list box), otherwise the name \*(L"My Certificate\*(R" is used.
.Ip "\fB\-sign\fR, \fB\-signreq\fR, \fB\-xsign\fR" 4
calls the \fBca\fR program to sign a certificate request. It expects the request
to be in the file \*(L"newreq.pem\*(R". The new certificate is written to the file
\*(L"newcert.pem\*(R" except in the case of the \fB\-xsign\fR option when it is written
to standard output.
.Ip "\fB\-signCA\fR" 4
this option is the same as the \fB\-signreq\fR option except it uses the configuration
file section \fBv3_ca\fR and so makes the signed request a valid \s-1CA\s0 certificate. This
is useful when creating intermediate \s-1CA\s0 from a root \s-1CA\s0.
.Ip "\fB\-signcert\fR" 4
this option is the same as \fB\-sign\fR except it expects a self signed certificate
to be present in the file \*(L"newreq.pem\*(R".
.Ip "\fB\-verify\fR" 4
verifies certificates against the \s-1CA\s0 certificate for \*(L"demoCA\*(R". If no certificates
are specified on the command line it tries to verify the file \*(L"newcert.pem\*(R". 
.Ip "\fBfiles\fR" 4
one or more optional certificate file names for use with the \fB\-verify\fR command.
.SH "EXAMPLES"
Create a CA hierarchy:
.PP
.Vb 1
\& CA.pl -newca
.Ve
Complete certificate creation example: create a CA, create a request, sign
the request and finally create a PKCS#12 file containing it.
.PP
.Vb 4
\& CA.pl -newca
\& CA.pl -newreq
\& CA.pl -signreq
\& CA.pl -pkcs12 "My Test Certificate"
.Ve
.SH "DSA CERTIFICATES"
Although the \fBCA.pl\fR creates RSA CAs and requests it is still possible to
use it with DSA certificates and requests using the req(1) command
directly. The following example shows the steps that would typically be taken.
.PP
Create some DSA parameters:
.PP
.Vb 1
\& openssl dsaparam -out dsap.pem 1024
.Ve
Create a DSA CA certificate and private key:
.PP
.Vb 1
\& openssl req -x509 -newkey dsa:dsap.pem -keyout cacert.pem -out cacert.pem
.Ve
Create the CA directories and files:
.PP
.Vb 1
\& CA.pl -newca
.Ve
enter cacert.pem when prompted for the CA file name.
.PP
Create a DSA certificate request and private key (a different set of parameters
can optionally be created first):
.PP
.Vb 1
\& openssl req -out newreq.pem -newkey dsa:dsap.pem 
.Ve
Sign the request:
.PP
.Vb 1
\& CA.pl -signreq
.Ve
.SH "NOTES"
Most of the filenames mentioned can be modified by editing the \fBCA.pl\fR script.
.PP
If the demoCA directory already exists then the \fB\-newca\fR command will not
overwrite it and will do nothing. This can happen if a previous call using
the \fB\-newca\fR option terminated abnormally. To get the correct behaviour
delete the demoCA directory if it already exists.
.PP
Under some environments it may not be possible to run the \fBCA.pl\fR script
directly (for example Win32) and the default configuration file location may
be wrong. In this case the command:
.PP
.Vb 1
\& perl -S CA.pl
.Ve
can be used and the \fBOPENSSL_CONF\fR environment variable changed to point to 
the correct path of the configuration file \*(L"openssl.cnf\*(R".
.PP
The script is intended as a simple front end for the \fBopenssl\fR program for use
by a beginner. Its behaviour isn't always what is wanted. For more control over the
behaviour of the certificate commands call the \fBopenssl\fR command directly.
.SH "ENVIRONMENT VARIABLES"
The variable \fBOPENSSL_CONF\fR if defined allows an alternative configuration
file location to be specified, it should contain the full path to the
configuration file, not just its directory.
.SH "SEE ALSO"
x509(1), ca(1), req(1), pkcs12(1),
config(5)

.rn }` ''
.IX Title "CA.PL 1"
.IX Name "CA.pl - friendlier interface for OpenSSL certificate programs"

.IX Header "NAME"

.IX Header "SYNOPSIS"

.IX Header "DESCRIPTION"

.IX Header "COMMAND OPTIONS"

.IX Item "\fB?\fR, \fB\-h\fR, \fB\-help\fR"

.IX Item "\fB\-newcert\fR"

.IX Item "\fB\-newreq\fR"

.IX Item "\fB\-newreq-nodes\fR"

.IX Item "\fB\-newca\fR"

.IX Item "\fB\-pkcs12\fR"

.IX Item "\fB\-sign\fR, \fB\-signreq\fR, \fB\-xsign\fR"

.IX Item "\fB\-signCA\fR"

.IX Item "\fB\-signcert\fR"

.IX Item "\fB\-verify\fR"

.IX Item "\fBfiles\fR"

.IX Header "EXAMPLES"

.IX Header "DSA CERTIFICATES"

.IX Header "NOTES"

.IX Header "ENVIRONMENT VARIABLES"

.IX Header "SEE ALSO"

